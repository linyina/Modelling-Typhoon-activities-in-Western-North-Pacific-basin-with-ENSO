labs(x = "Year",y = "Month", title = "Annual Frequency of Tropical Cyclones in 1949-2016 of different months")
p + theme(plot.title = element_text(size = rel(1.2))) + theme(axis.text.x = element_text(hjust = 1, colour = "grey50"))
p4 + theme(plot.title = element_text(size = rel(1.2))) + theme(axis.text.x = element_text(hjust = 1, colour = "grey50"))
View(BST.an.mon.freq)
BST.an.mon.freq$od.year<-reorder(BST.an.mon.freq$Year, BST.an.mon.freq$freq)
plot.new()
p4 <-  ggplot(data=BST.an.mon.freq, aes(Year, od.prov)) +
geom_tile(aes(fill = freq), colour = "white") +
scale_fill_gradient(low = "#FFFF80CC",high = "#FF0000CC")+
labs(x = "Year",y = "Month", title = "Annual Frequency of Tropical Cyclones in 1949-2016 of different months")
p4 + theme(plot.title = element_text(size = rel(1.2))) + theme(axis.text.x = element_text(hjust = 1, colour = "grey50"))
p4 <-  ggplot(data=BST.an.mon.freq, aes(Year, od.year)) +
geom_tile(aes(fill = freq), colour = "white") +
scale_fill_gradient(low = "#FFFF80CC",high = "#FF0000CC")+
labs(x = "Year",y = "Month", title = "Annual Frequency of Tropical Cyclones in 1949-2016 of different months")
p4 + theme(plot.title = element_text(size = rel(1.2))) + theme(axis.text.x = element_text(hjust = 1, colour = "grey50"))
p4 <-  ggplot(data=BST.an.mon.freq, aes(od.Year, Month)) +
geom_tile(aes(fill = freq), colour = "white") +
scale_fill_gradient(low = "#FFFF80CC",high = "#FF0000CC")+
labs(x = "Year",y = "Month", title = "Annual Frequency of Tropical Cyclones in 1949-2016 of different months")
p4 + theme(plot.title = element_text(size = rel(1.2))) + theme(axis.text.x = element_text(hjust = 1, colour = "grey50"))
p4 <-  ggplot(data=BST.an.mon.freq, aes(od.year, Month)) +
geom_tile(aes(fill = freq), colour = "white") +
scale_fill_gradient(low = "#FFFF80CC",high = "#FF0000CC")+
labs(x = "Year",y = "Month", title = "Annual Frequency of Tropical Cyclones in 1949-2016 of different months")
p4 + theme(plot.title = element_text(size = rel(1.2))) + theme(axis.text.x = element_text(hjust = 1, colour = "grey50"))
p4 + theme(plot.title = element_text(size = rel(1.2))) + theme(axis.text.x = element_text(angle = 90,hjust = 1, colour = "grey50"))
dev.copy(pdf,"Heatmap_TC_total_Year.pdf",width=8,height=6)
dev.off()
p4 <-  ggplot(data=BST.an.mon.freq, aes(od.year, Month)) +
geom_tile(aes(fill = freq), colour = "white") +
scale_fill_gradient(low = "#FFFF80CC",high = "#FF0000CC")+
labs(x = "Year",y = "Month", title = "Annual Frequency of Tropical Cyclones in 1949-2016")
p4 + theme(plot.title = element_text(size = rel(1.2))) + theme(axis.text.x = element_text(angle = 90,hjust = 1, colour = "grey50"))
dev.copy(pdf,"Heatmap_TC_total_Year.pdf",width=8,height=6)
dev.off()
plot.new()
BST.mon.TS$od.year<-reorder(BST.mon.TS$Year, BST.mon.TS$freq)
p5 <-  ggplot(data=BST.mon.TS, aes(od.year, Month)) +
geom_tile(aes(fill = freq), colour = "white") +
scale_fill_gradient(low = "#FFFF80CC",high = "#FF0000CC")+
labs(x = "Year",y = "Month", title = "Annual Frequency of Tropical Storms in 1949-2016")
p4 + theme(plot.title = element_text(size = rel(1.2))) + theme(axis.text.x = element_text(angle = 90,hjust = 1, colour = "grey50"))
p5 + theme(plot.title = element_text(size = rel(1.2))) + theme(axis.text.x = element_text(angle = 90,hjust = 1, colour = "grey50"))
dev.copy(pdf,"Heatmap_TS_total_Year.pdf",width=8,height=6)
dev.off()
BST.mon.TY$od.year<-reorder(BST.mon.TY$Year, BST.mon.TY$freq)
plot.new()
p6 <-  ggplot(data=BST.mon.TY, aes(od.year, Month)) +
geom_tile(aes(fill = freq), colour = "white") +
scale_fill_gradient(low = "#FFFF80CC",high = "#FF0000CC")+
labs(x = "Year",y = "Month", title = "Annual Frequency of Typhoons in 1949-2016")
p6 + theme(plot.title = element_text(size = rel(1.2))) + theme(axis.text.x = element_text(angle = 90,hjust = 1, colour = "grey50"))
dev.copy(pdf,"Heatmap_TY_total_Year.pdf",width=8,height=6)
dev.off()
BST.mon.SuperTY$od.year<-reorder(BST.mon.SuperTY$Year, BST.mon.SuperTY$freq)
plot.new()
p7 <-  ggplot(data=BST.mon.SuperTY, aes(od.year, Month)) +
geom_tile(aes(fill = freq), colour = "white") +
scale_fill_gradient(low = "#FFFF80CC",high = "#FF0000CC")+
labs(x = "Year",y = "Month", title = "Annual Frequency of SuperTY in 1949-2016")
p7 + theme(plot.title = element_text(size = rel(1.2))) + theme(axis.text.x = element_text(angle = 90,hjust = 1, colour = "grey50"))
dev.copy(pdf,"Heatmap_SuperTY_total_Year.pdf",width=8,height=6)
dev.off()
View(BST.an.mon.freq)
plot(density(BST.an.mon.freq$freq))
plot(BST.an.mon.freq$freq)
plot(BST.an.mon.freq$Month,BST.an.mon.freq$freq)
plot(BST.mon.freq$Month,BST.mon.freq$x, type="l",
main = "Frequency of monthly TC numbers, 1949-2016",
xlab= "Month",
ylab = "Frequency")
plot(BST.an.mon.freq$Month,BST.an.mon.freq$freq)
plot(density(BST.an.mon.freq$freq))
SST<- read.table(file = "./Data/SST/oisst.v2 monthly SST.txt", header = TRUE, sep = "")
plot(SST$NINO3.4)
View(SST)
plot(SST$NINO3.4, type="l")
plot(SST$ANOM.3, type="l")
plot(SST$NINO3.4, type="l")
plot(SST$ANOM.3, type="l")
# Using list.files to read all the data
library(foreign)
file.list <- list.files(path = "./Data/CMABST", full.names=TRUE)
View(SuTY1999)
# Constructing a dataframe
BST.all.data <- data.frame()
for (current.files in file.list){
# Read THE data
tempData <- read.table(current.files, header=FALSE,  fill = T, sep="")
# Combine the data in one dataframe
BST.all.data <- rbind(BST.all.data, tempData)
}
a = 0
b = 1
BST.all.data[,8]=replace(BST.all.data[,8],BST.all.data[,8]=="",NA)
while (a < 68514){
a = a + 1
if (is.na(BST.all.data[a,8]) == TRUE){
BST.all.data[a,8] <- BST.all.data[b,8]
}
else { b = a }
}
BST.all.data <- within(BST.all.data, SerialNum<- BST.all.data[,4])
wanted.data <- BST.all.data[,1] == 66666
summary(BST.all.data$V4[wanted.data])
a = 0
b = 1
BST.all.data$SerialNum=replace(BST.all.data$SerialNum,BST.all.data$SerialNum>54,NA)
while (a < 68514){
a = a + 1
if (is.na(BST.all.data[a,10]) == TRUE){
BST.all.data[a,10] <- BST.all.data[b,10]
}
else { b = a }
}
## Save the data.frame into file
## save(BST.all.data, file="ALL_CMABST.Rda")
write.table(BST.all.data, "BST_All_Data.dat", row.names = FALSE)
Head.line <- 1
i <- 0
BST.clean <- BST.all.data
while ( Head.line <= 68514 ){
BST.clean <- BST.clean[- (Head.line - i),]
Head.line <- Head.line + BST.all.data[Head.line, 3] + 1
i <- i+1
}
write.table(BST.clean, "BST_no_header.dat", row.names = FALSE)
Year <- substr(BST.clean[,1], start = 1, stop = 4)
Month <- substr(BST.clean[,1], start = 5, stop = 6)
Date <- substr(BST.clean[,1], start = 7, stop = 8)
Hour <- substr(BST.clean[,1], start = 9, stop = 10)
Name <- as.character(BST.clean[,8])
Intensity <- BST.clean[,2]
Latitude <- BST.clean[,3]
Longitude <- BST.clean[,4]
Pres <- BST.clean[,5]
WND <- BST.clean[,6]
OWD <- BST.clean[,7]
SerialNum <- BST.clean$SerialNum
CMABST <- data.frame(Year, Month, Date, Hour,Name, SerialNum, Intensity, Latitude, Longitude, Pres, WND, OWD)
#### Format cleaning
CMABST$Latitude <- CMABST$Latitude/10
CMABST$Longitude <- CMABST$Longitude/10
summary(CMABST$Latitude)
summary(CMABST$Longitude)
CMABST$SerialNum = paste0(Year, "-",SerialNum,sep = "")
Landfall <- read.csv("./Data/Landfall.csv")
names(Landfall) <- c("Year", "Serial Number", "Chinese ID", "Name",
"Total Times of Landfall", "Order of landfall", "Landfall Province",
"Landfall Intensity Category")
a = 0
b = 1
while (a <= 814){
a = a + 1
if (is.na(Landfall[a,1]) == TRUE){
Landfall[a,1] <- Landfall[b,1]
}
else { b = a }
}
Landfall<- Landfall[-815,]
## Rename the level to clean the strange symbols
levels(Landfall$`Landfall Province`)[11] <- "Shanghai:Zhejiang"
levels(Landfall$`Landfall Province`)[15] <- "Zhejiang:Fujian"
file.list <- list.files(path = "./Data/CMABST", full.names=TRUE)
# Constructing a dataframe
BST.all.data <- data.frame()
for (current.files in file.list){
# Read THE data
tempData <- read.table(current.files, header=FALSE,  fill = T, sep="")
# Combine the data in one dataframe
BST.all.data <- rbind(BST.all.data, tempData)
}
a = 0
b = 1
BST.all.data[,8]=replace(BST.all.data[,8],BST.all.data[,8]=="",NA)
while (a < 68514){
a = a + 1
if (is.na(BST.all.data[a,8]) == TRUE){
BST.all.data[a,8] <- BST.all.data[b,8]
}
else { b = a }
}
BST.all.data <- within(BST.all.data, SerialNum<- BST.all.data[,4])
wanted.data <- BST.all.data[,1] == 66666
summary(BST.all.data$V4[wanted.data])
a = 0
b = 1
BST.all.data$SerialNum=replace(BST.all.data$SerialNum,BST.all.data$SerialNum>54,NA)
while (a < 68514){
a = a + 1
if (is.na(BST.all.data[a,10]) == TRUE){
BST.all.data[a,10] <- BST.all.data[b,10]
}
else { b = a }
}
## Save the data.frame into file
## save(BST.all.data, file="ALL_CMABST.Rda")
write.table(BST.all.data, "BST_All_Data.dat", row.names = FALSE)
Head.line <- 1
i <- 0
BST.clean <- BST.all.data
while ( Head.line <= 68514 ){
BST.clean <- BST.clean[- (Head.line - i),]
Head.line <- Head.line + BST.all.data[Head.line, 3] + 1
i <- i+1
}
write.table(BST.clean, "BST_no_header.dat", row.names = FALSE)
Year <- substr(BST.clean[,1], start = 1, stop = 4)
Month <- substr(BST.clean[,1], start = 5, stop = 6)
Date <- substr(BST.clean[,1], start = 7, stop = 8)
Hour <- substr(BST.clean[,1], start = 9, stop = 10)
Name <- as.character(BST.clean[,8])
Intensity <- BST.clean[,2]
Latitude <- BST.clean[,3]
Longitude <- BST.clean[,4]
Pres <- BST.clean[,5]
WND <- BST.clean[,6]
OWD <- BST.clean[,7]
SerialNum <- BST.clean$SerialNum
CMABST <- data.frame(Year, Month, Date, Hour,Name, SerialNum, Intensity, Latitude, Longitude, Pres, WND, OWD)
#### Format cleaning
CMABST$Latitude <- CMABST$Latitude/10
CMABST$Longitude <- CMABST$Longitude/10
summary(CMABST$Latitude)
summary(CMABST$Longitude)
CMABST$SerialNum = paste0(Year, "-",SerialNum,sep = "")
Landfall <- read.csv("./Data/Landfall.csv")
names(Landfall) <- c("Year", "Serial Number", "Chinese ID", "Name",
"Total Times of Landfall", "Order of landfall", "Landfall Province",
"Landfall Intensity Category")
a = 0
b = 1
while (a <= 814){
a = a + 1
if (is.na(Landfall[a,1]) == TRUE){
Landfall[a,1] <- Landfall[b,1]
}
else { b = a }
}
Landfall<- Landfall[-815,]
## Rename the level to clean the strange symbols
levels(Landfall$`Landfall Province`)[11] <- "Shanghai:Zhejiang"
levels(Landfall$`Landfall Province`)[15] <- "Zhejiang:Fujian"
######
## summary(CMABST$Latitude)
## Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
## 0.50   14.10   19.10   20.72   25.60   60.50
## summary(CMABST$Longitude)
## Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
## 95.0   122.1   132.7   134.4   145.1   226.0
## ylim = c(0,61), xlim = c(90, 230)
######
library(maps)
library(mapdata)
library(lattice)
#######################################################
####  2.2 Exploratory Analysis
####
#######################################################
library(lattice)   # heatmap and xyplot
library(ggplot2)   # time series plot
library(MASS)
library(tidyr)  # time series plot
library(RColorBrewer) # Colours
library(reshape2) # melt
########################
if (!(names(dev.cur()) %in% c("windows","X11cairo"))) x11(width=8,height=6)
View(Landfall)
install.packages(c("maps", "reshape2", "ggplot2", "tidyr", "RColorBrewer"))
install.packages("mapdata")
View(BST.all.data)
library(data.table)
library(mapdata)
library(maps)
library(data.table)
BST.temp <- data.frame(Year=rep(1949:2016, each=12),
Month= rep(c("01","02","03","04","05","06","07","08","09","10","11","12"), 68))
BST.clean<- CMABST
BST.clean[BST.clean$Intensity==9,]$Intensity <- 0
BST.freq <- data.frame(Year=BST.clean$Year,
Month=BST.clean$Month,
Intensity = BST.clean$Intensity,
SN=substr(BST.clean$SerialNum, 6,7))
## maximum Intensity
BST.SN.freq<- aggregate(Intensity ~ SN + Year, BST.freq, max)
BST.SN.freq$freq<- rep(1, length(BST.SN.freq$Year))
BST.freq<- aggregate(Intensity ~ SN + Year + Month, BST.freq, max)
BST.freq$freq <- rep(1, length(BST.freq$Year))
BST.freq<- merge(BST.temp, BST.freq, all=TRUE)
BST.freq[is.na(BST.freq$freq),]$freq <- 0
BST.freq[is.na(BST.freq$Intensity),]$Intensity <- 0
BST.freq$SN <- as.numeric(as.character(BST.freq$SN))
BST.freq[is.na(BST.freq$SN),]$SN <- 0
## annual frequency TC and monthly TC
BST.an.freq<- aggregate(BST.freq$SN, by=list(Year=BST.freq$Year), max)
names(BST.an.freq)<- c("Year", "Frequency")
BST.an.mon.freq<- aggregate(freq ~ Year + Month, BST.freq,sum)
BST.mon.freq<- aggregate(BST.freq$freq, by=list(Month=BST.freq$Month), sum)
BST.mon.freq$Month<- as.numeric(levels(BST.mon.freq$Month))
## TS+
BST.TS <- BST.freq[BST.freq$Intensity>=2,]
BST.SN.TS<- BST.SN.freq[BST.SN.freq$Intensity>=2,]
BST.TS<- merge(BST.TS, BST.temp, all=TRUE)
BST.TS[is.na(BST.TS$freq),]$freq <- 0
BST.TS[is.na(BST.TS$Intensity),]$Intensity <- 0
BST.an.TS<- aggregate(BST.SN.TS$freq, by= list(Year=(BST.SN.TS$Year)), FUN=sum)
BST.mon.TS<- aggregate(freq ~ Year + Month, BST.TS, sum)
## TY+
BST.TY <- BST.freq[BST.freq$Intensity>=4,]
BST.SN.TY<- BST.SN.freq[BST.SN.freq$Intensity>=4,]
BST.TY<- merge(BST.TY, BST.temp, all=TRUE)
BST.TY[is.na(BST.TY$freq),]$freq <- 0
BST.TY[is.na(BST.TY$Intensity),]$Intensity <- 0
BST.an.TY<- aggregate(BST.SN.TY$freq, by= list(Year=(BST.SN.TY$Year)), FUN=sum)
BST.mon.TY<- aggregate(freq ~ Year + Month, BST.TY, sum)
## SuperTY
BST.SuperTY <- BST.freq[BST.freq$Intensity>=6,]
BST.SN.SuperTY<- BST.SN.freq[BST.SN.freq$Intensity>=6,]
BST.SuperTY<- merge(BST.SuperTY, BST.temp, all=TRUE)
BST.SuperTY[is.na(BST.SuperTY$freq),]$freq <- 0
BST.SuperTY[is.na(BST.SuperTY$Intensity),]$Intensity <- 0
BST.an.SuperTY<- aggregate(BST.SN.SuperTY$freq, by= list(Year=(BST.SN.SuperTY$Year)), FUN=sum)
SuTY1999<- data.frame(Year=1999, x=0)
BST.an.SuperTY<-rbind(BST.an.SuperTY, SuTY1999)
BST.mon.SuperTY<- aggregate(freq ~ Year + Month, BST.SuperTY, sum)
## Combine
DT.BST.an<- data.frame(BST.an.freq, BST.an.TS$x, BST.an.TY$x, BST.an.SuperTY$x)
names(DT.BST.an)<-c("Year","ALL", "TS+","TY+","SuperTY")
## Reading the data
SST<- read.table(file = "./Data/SST/oisst.v2 monthly SST.txt", header = TRUE, sep = "")
BST.mon.data<- data.frame(Year = BST.an.mon.freq$Year,
Month = BST.an.mon.freq$Month,
TC.freq = BST.an.mon.freq$freq,
TS.freq = BST.mon.TS$freq,
TY.freq = BST.mon.TY$freq,
SuperTY.freq = BST.mon.SuperTY$freq)
str(BST.mon.data)
BST.mon.data$Month<- as.integer(BST.mon.data$Month)
str(BST.mon.data)
str(SST)
Nino<- data.frame(Year = SST$YR,
Month = SST$MON,
NINO3 = SST$NINO3,
ANOM3 = SST$ANOM.1,
NINO3.4 = SST$NINO3.4,
ANOM3.4 = SST$ANOM.3,
NINO4 = SST$NINO4,
ANOM4 = SST$ANOM.2)
BST.ana<- merge(Nino, BST.mon.data, sort = FALSE)
str(BST.ana)
write.table(BST.ana, "BST_analysis_data.dat", row.names = FALSE)
quartz(width = 8, height = 6)
############################################
#### 3-3 Deseasonalize to find time lag ####
########################
## Step 1: Find the cross correlation between SST and the TS/TY/SuperTY
########################
ccf.ts<-ccf(BST.ana$NINO3.4,BST.ana$TS.freq)
ccf.ts
ccf.ts$lag[ccf.ts$acf==max(abs(ccf.ts$acf))]  # lag 8
plot(ccf.ts)
ccf.ty<-ccf(BST.ana$NINO3.4, BST.ana$TY.freq)
ccf.ty
ccf.ty$lag[ccf.ty$acf==max(abs(ccf.ty$acf))]  # lag 8
plot(ccf.ty)
ccf.sty<-ccf(BST.ana$NINO3.4, BST.ana$SuperTY.freq)
ccf.sty
ccf.sty$lag[ccf.sty$acf==max(abs(ccf.sty$acf))]   # lag 7
plot(ccf.sty)
par(mfrow=c(1,3))
plot(ccf.ts)
plot(ccf.ty)
plot(ccf.sty)
par(mfrow=c(3,1))
plot(ccf.ts)
plot(ccf.ty)
plot(ccf.sty)
dev.copy(pdf,"CCF before deseasonalize.pdf",width=8,height=6)
dev.off()
seas.sst<- lm(BST.ana$NINO3.4 ~ as.factor(BST.ana$Month))
sst.des<- summary(seas.sst)$residual
seas.ts <- lm(BST.ana$TS.freq ~ as.factor(BST.ana$Month))
ts.des<- summary(seas.ts)$residual
seas.ty <- lm(BST.ana$TY.freq ~ as.factor(BST.ana$Month))
ty.des<- summary(seas.ty)$residual
seas.sty<- lm(BST.ana$SuperTY.freq ~ as.factor(BST.ana$Month))
superty.des<- summary(seas.sty)$residual
ccf.ts.des <- ccf(sst.des, ts.des)
par(mfrow=c(1,1))
plot(ccf.ts.des)
ccf.ts.des$lag[ccf.ts.des$acf==max(abs(ccf.ts.des$acf))]
ccf.ty.des <- ccf(sst.des, ty.des)
plot(ccf.ty.des)
ccf.ty.des$lag[ccf.ty.des$acf==max(abs(ccf.ty.des$acf))]
ccf.sty.des<- ccf(sst.des, superty.des)
plot(ccf.sty.des)
ccf.sty.des$lag[ccf.sty.des$acf==max(abs(ccf.sty.des$acf))]
par(mfrow=c(3,1))
plot(ccf.ts.des)
plot(ccf.ty.des)
plot(ccf.sty.des)
dev.copy(pdf,"CCF after deseasonalize.pdf",width=8,height=6)
dev.off()
par(mfrow=c(1,1))
x <- rnorm(10)
y <- -lead(x)
rm(x)
ccf.ts.des
plot(ccf.ts.des)
plot(ccf.ty.des)
plot(ccf.sty.des)
ccf.ty.des
plot(ccf.ty.des)
plot(ccf.sty.des)
ccf.ts
plot(ccf.ts)
summary(seas.sst)
plot(ccf.ts.des)
plot(ccf.ty.des)
plot(ccf.sty.des)
View(BST.ana)
str(BST.ana)
dummy.p1 <- cos(pi*BST.ana$Month/6)
dummy.p1 <- cos(pi*BST.ana$Month /6)
dummy.p2 <- sin(pi*BST.ana$Month /6)
BST.ana$dummy.p1 <- cos(pi*BST.ana$Month /6)
BST.ana$dummy.p2 <- sin(pi*BST.ana$Month /6)
rm(dummy.p1)
rm(dummy.p2)
BST.glm.ts.1<- glm(TS.freq ~ NINO3.4 + dummy.p1 + dummy.p2, data=BST.ana,family=poisson(link = log))
summary(BST.glm.ts.1)
### Step 2. Before conducting time lag - using nino 3.4
### dispersion check
disp<- function(model){
sum( resid(model,type="pearson")^2 ) / model$df.residual
}
# underdispersion
disp(BST.glm.ts.1)
BST.glm.ty.1<- glm(TY.freq ~ NINO3.4 + dummy.p1 + dummy.p2, data=BST.ana,family=poisson(link = log))
summary(BST.glm.ty.1)
BST.glm.superty.1<- glm(SuperTY.freq ~ NINO3.4 + dummy.p1 + dummy.p2, data=BST.ana,family=poisson(link = log))
summary(BST.glm.superty.1)
# underdispersion
disp(BST.glm.ts.1)
disp(BST.glm.ty.1)
disp(BST.glm.superty.1)
### Using month
BST.glm.ts.2 <- glm(TS.freq ~ NINO3.4 + month, data=BST.ana,family=poisson(link = log))
### Using month
BST.glm.ts.2 <- glm(TS.freq ~ NINO3.4 + Month, data=BST.ana,family=poisson(link = log))
summary(BST.glm.ts.2)
### Using month
BST.glm.ts.2 <- glm(TS.freq ~ NINO3.4 + as.factor(Month), data=BST.ana,family=poisson(link = log))
summary(BST.glm.ts.2)
summary(BST.glm.ts.1)
### poisson
BST.glm.ts.1<- glm(TS.freq ~ NINO3.4, data=BST.ana,family=poisson(link = log))
summary(BST.glm.ts.1)
### 1: Using dummy seasonal covariates - cosine function
BST.glm.ts.1<- glm(TS.freq ~ NINO3.4 + dummy.p1 + dummy.p2, data=BST.ana,family=poisson(link = log))
summary(BST.glm.ts.1)
plot(ccf.ts)
ccf.ts
sst.lag.7 <- c(rep(NA,7), BST.ana$NINO3.4)
sst.lag.7 <- sst.lag[1:420]
BST.ana$sst.lag.7<- sst.lag.7
### Step 3: with time lag
BST.glm.ts.3<- glm(TS.freq ~ sst.lag.7 + dummy.p1 + dummy.p2, data=BST.ana,family=poisson(link = log))
View(BST.ana)
sst.lag.7 <- sst.lag.7[1:420]
BST.ana$sst.lag.7<- sst.lag.7
### Step 3: with time lag
BST.glm.ts.3<- glm(TS.freq ~ sst.lag.7 + dummy.p1 + dummy.p2, data=BST.ana,family=poisson(link = log))
summary(BST.glm.ts.1)
summary(BST.glm.ts.3)
ccf.ts.des
plot(ccf.ts.des)
summary(BST.glm.ty.1)
summary(BST.glm.superty.1)
### poisson
BST.glm.ts.1<- glm(TS.freq ~ NINO3.4, data=BST.ana,family=poisson(link = log))
summary(BST.glm.ts.1)
### 1: Using dummy seasonal covariates - cosine function
BST.glm.ts.1<- glm(TS.freq ~ NINO3.4 + dummy.p1 + dummy.p2, data=BST.ana,family=poisson(link = log))
summary(BST.glm.ts.1)
summary(BST.glm.ts.2)
anova(BST.glm.ts.1, BST.glm.ts.2)
plot(ccf.ty.des)
plot(ccf.sty.des)
ccf.sty.des
sst.lag.1 <- c(NA, BST.ana$NINO3.4)
sst.lag.1 <- sst.lag.1[1:420]
BST.ana$sst.lag.1 <- sst.lag.1
BST.glm.superty.3 <- glm(TS.freq ~ sst.lag.1 + dummy.p1 + dummy.p2, data=BST.ana,family=poisson(link = log))
summary(BST.glm.superty.3)
summary(BST.glm.superty.1)
BST.glm.superty.1<- glm(SuperTY.freq ~ NINO3.4 + dummy.p1 + dummy.p2, data=BST.ana,family=poisson(link = log))
summary(BST.glm.superty.1)
BST.glm.superty.3 <- glm(TS.freq ~ sst.lag.1 + dummy.p1 + dummy.p2, data=BST.ana,family=poisson(link = log))
BST.glm.superty.3 <- glm(SuperTY.freq ~ sst.lag.1 + dummy.p1 + dummy.p2, data=BST.ana,family=poisson(link = log))
summary(BST.glm.superty.3)
BST.glm.superty.1<- glm(SuperTY.freq[2:420] ~ NINO3.4 + dummy.p1 + dummy.p2, data=BST.ana,family=poisson(link = log))
BST.glm.superty.1<- glm(SuperTY.freq ~ NINO3.4 + dummy.p1 + dummy.p2, data=BST.ana[2:420],family=poisson(link = log))
BST.glm.superty.1<- glm(SuperTY.freq[2:420,] ~ NINO3.4 + dummy.p1 + dummy.p2, data=BST.ana,family=poisson(link = log))
BST.glm.superty.1<- glm(SuperTY.freq[,2:420] ~ NINO3.4 + dummy.p1 + dummy.p2, data=BST.ana,family=poisson(link = log))
BST.glm.superty.1<- glm(SuperTY.freq[2:420] ~ NINO3.4 + dummy.p1 + dummy.p2, data=BST.ana,family=poisson(link = log))
BST.glm.superty.1<- glm(SuperTY.freq ~ NINO3.4 + dummy.p1 + dummy.p2, data=BST.ana[2:420,],family=poisson(link = log))
summary(BST.glm.superty.1)
BST.glm.superty.3 <- glm(SuperTY.freq ~ sst.lag.1 + dummy.p1 + dummy.p2, data=BST.ana[2:420,],family=poisson(link = log))
summary(BST.glm.superty.3)
anova(BST.glm.superty.1, BST.glm.superty.3)
